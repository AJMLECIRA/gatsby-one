const Product = require("../models/productModel");
const mongoose = require("mongoose");

//GET all products
const getProducts = async (req, res) => {
  const { name, width, height, edge, glassType } = req.body;
  // get all products from DB
  try {
    const product = await Product.find({}).sort({ createdAt: -1 });
    res.status(200).json(product);
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
};

//Get single product
const getProduct = async (req, res) => {
  const { id } = req.params;
  if (!mongoose.Types.ObjectId.isValid(id)) {
    return res.status(404).json({ error: "Invalid Product ID" });
  }
  const product = await Product.findById(id);
  if (!product) {
    return res.status(404).json({ error: "No such Product" });
  }
  res.status(200).json(product);
};

// Create new Product
const createProduct = async (req, res) => {
  const { name, width, height, edge, glassType } = req.body;
  // add doc to DB
  try {
    const product = await Product.create({
      name,
      width,
      height,
      edge,
      glassType,
    });
    res.status(200).json(product);
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
};

// Delete Product
const deleteProduct = async (req, res) => {
  const { id } = req.params;
  if (!mongoose.Types.ObjectId.isValid(id)) {
    return res.status(404).json({ error: "Invalid Product ID" });
  }
  const product = await Product.findOneAndDelete({ _id: id });
  if (!product) {
    return res.status(400).json({ error: "No such Product" });
  }
  res.status(200).json(product);
};

// update product
const updateProduct = async (req, res) => {
  const { id } = req.params;
  if (!mongoose.Types.ObjectId.isValid(id)) {
    return res.status(404).json({ error: "Invalid Product ID" });
  }
  const product = await Product.findOneAndUpdate(
    { _id: id },
    {
      ...req.body,
    }
  );
  if (!product) {
    return res.status(404).json({ error: "No such Product" });
  }
  res.status(200).json(product);
};

module.exports = {
  createProduct,
  getProducts,
  getProduct,
  deleteProduct,
  updateProduct,
};
